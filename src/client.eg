
require:
   fs
   earl-react as React
   react-dom as ReactDOM
   events -> EventEmitter
   electron -> ipc-renderer
   /browser -> document
   /dom
   .components/app ->
      ;; ChatApp
      ChatApp2
   .source ->
      StreamSource
      StaticSource
   .master ->
      ;; Dispatcher
      Dispatcher2

require-macros:
   earl-react ->
      %, component

stdin-buffer = new EventEmitter()
ipc-renderer.on(.data) with {event, data} ->
   stdin-buffer.emit(.data, data)
ipc-renderer.on(.end) with {event, data} ->
   stdin-buffer.emit(.end)
ipc-renderer.send(.ready)

;; setup(options) =
;;    src = match options:
;;       {=> messages} -> StaticSource(options.messages)
;;       {=> stream} -> StreamSource(stream.[in], stream.out)
;;    let master = Dispatcher(src)

;;    items(options.settings.client.groups) each
;;       {label, channels} ->
;;          view = master.add-view(label)
;;          channels each ch ->
;;             view.add-channel(ch)
;;             view.set-active-channel(ch)
;;          view.add-channel("/notice")
;;          master.activate(view)

;;    ReactDOM.render(a, options.mount) where a =
;;       ChatApp %
;;          master = master
;;    master.run()

setup2(options) =
   src = match options:
      {=> messages} -> StaticSource(options.messages)
      {=> stream} -> StreamSource(stream.[in], stream.out)
   let master = Dispatcher2(src)

   items(options.settings.client.groups) each
      {label, channels} ->
         view = master.add-view(label, channels)
         ;; channels each channel-name ->
         ;;    ;; ch = master.open-channel(channel-name)
         ;;    ;; view.add-channel(ch)
         ;;    ;; view.set-focus(ch)
         ;; ;; master.activate(view)

   ReactDOM.render(a, options.mount) where a =
      ChatApp2 %
         master = master
   master.run()

main() where main() =
   mount-node = document.get-element-by-id("mount")
   setup2 with {
      mount = mount-node
      stream = {
         "in" = stdin-buffer
         out = {write(x) = ipc-renderer.send(.data, x)}
      }
      settings = JSON.parse with
         ;; fs.read-file-sync("debug.json", .utf8)
         fs.read-file-sync("botte.json", .utf8)
   }
